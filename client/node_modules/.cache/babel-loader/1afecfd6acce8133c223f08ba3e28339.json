{"ast":null,"code":"var _jsxFileName = \"/home/rachitverma/Rachit/UDEMY/7. React Redux Express Mongodb/self-code/To do list/client/src/components/profile/ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = _ref => {\n  _s();\n\n  let {\n    username,\n    getGithubRepos,\n    repos\n  } = _ref;\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \"Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-dark\",\n            children: [\"Watchers: \", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-light\",\n            children: [\"Forks: \", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, repo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","getGithubRepos","ProfileGithub","username","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","id","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"sources":["/home/rachitverma/Rachit/UDEMY/7. React Redux Express Mongodb/self-code/To do list/client/src/components/profile/ProfileGithub.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos.map(repo => (\n        <div key={repo.id} className=\"repo bg-white p-1 my-1\">\n          <div>\n            <h4>\n              <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {repo.name}\n              </a>\n            </h4>\n            <p>{repo.description}</p>\n          </div>\n          <div>\n            <ul>\n              <li className=\"badge badge-primary\">\n                Stars: {repo.stargazers_count}\n              </li>\n              <li className=\"badge badge-dark\">\n                Watchers: {repo.watchers_count}\n              </li>\n              <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n            </ul>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,aAAa,GAAG,QAAyC;EAAA;;EAAA,IAAxC;IAAEC,QAAF;IAAYF,cAAZ;IAA4BG;EAA5B,CAAwC;EAC7DN,SAAS,CAAC,MAAM;IACdG,cAAc,CAACE,QAAD,CAAd;EACD,CAFQ,EAEN,CAACF,cAAD,EAAiBE,QAAjB,CAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAI,SAAS,EAAC,mBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb;MAAmB,SAAS,EAAC,wBAA7B;MAAA,wBACE;QAAA,wBACE;UAAA,uBACE;YAAG,IAAI,EAAEA,IAAI,CAACC,QAAd;YAAwB,MAAM,EAAC,QAA/B;YAAwC,GAAG,EAAC,qBAA5C;YAAA,UACGD,IAAI,CAACE;UADR;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAME;UAAA,UAAIF,IAAI,CAACG;QAAT;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAA,uBACE;UAAA,wBACE;YAAI,SAAS,EAAC,qBAAd;YAAA,sBACUH,IAAI,CAACI,gBADf;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAIE;YAAI,SAAS,EAAC,kBAAd;YAAA,yBACaJ,IAAI,CAACK,cADlB;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF,eAOE;YAAI,SAAS,EAAC,mBAAd;YAAA,sBAA0CL,IAAI,CAACM,WAA/C;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QATF;IAAA,GAAUN,IAAI,CAACO,EAAf;MAAA;MAAA;MAAA;IAAA,QADD,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD,CAjCD;;GAAMX,a;;KAAAA,a;AAmCNA,aAAa,CAACY,SAAd,GAA0B;EACxBb,cAAc,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADP;EAExBZ,KAAK,EAAEL,SAAS,CAACkB,KAAV,CAAgBD,UAFC;EAGxBb,QAAQ,EAAEJ,SAAS,CAACmB,MAAV,CAAiBF;AAHH,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;EAChChB,KAAK,EAAEgB,KAAK,CAACC,OAAN,CAAcjB;AADW,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACmB,eAAD,EAAkB;EAAElB;AAAF,CAAlB,CAAP,CAA6CC,aAA7C,CAAf"},"metadata":{},"sourceType":"module"}