{"ast":null,"code":"var _jsxFileName = \"/home/rachitverma/Rachit/UDEMY/7. React Redux Express Mongodb/self-code/To do list/client/src/components/task-forms/TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTask, updateTask } from '../../actions/task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  title: '',\n  description: ''\n};\n\nconst TaskForm = _ref => {\n  _s();\n\n  let {\n    task: {\n      _id,\n      task,\n      loading\n    },\n    getTask\n  } = _ref;\n  const [formData, setFormData] = useState(initialState);\n  useEffect(() => {\n    if (!task) getTask(window.location.pathname.split('/').pop());\n\n    if (!loading && task) {\n      const taskData = { ...initialState\n      };\n\n      for (const key in task) {\n        if (key in taskData) taskData[key] = task[key];\n      }\n\n      setFormData(taskData);\n    }\n  }, [loading, getTask, task]);\n  const {\n    id,\n    title,\n    description\n  } = formData;\n\n  const onBack = e => {\n    setFormData(null);\n  };\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  }); // const onSubmit = (e) => {\n  //   e.preventDefault();\n  //   updateTask(window.location.pathname.split('/').pop(),formData);\n  // //   createProfile(formData, navigate, task ? true : false);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: 'Edit Your Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), ' Add some changes to your task']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: updateTask(window.location.pathname.split('/').pop(), formData),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          name: \"title\",\n          value: title,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"description\",\n          name: \"description\",\n          value: description,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary my-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: onBack,\n        className: \"btn btn-light my-1\",\n        to: \"/dashboard\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TaskForm, \"caVhFiprEG24WOw+7EBIyHBhQdo=\");\n\n_c = TaskForm;\nTaskForm.propTypes = {\n  // createTask: PropTypes.func.isRequired,\n  getTask: PropTypes.func.isRequired,\n  task: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  task: state.task\n});\n\nexport default connect(mapStateToProps, {\n  getTask\n})(TaskForm); //   const ProfileForm = ({\n//     profile: { profile, loading },\n//     createProfile,\n//     getCurrentProfile\n//   }) => {\n//     const [formData, setFormData] = useState(initialState);\n//     const creatingProfile = useMatch('/create-profile');\n//     const [displaySocialInputs, toggleSocialInputs] = useState(false);\n//     const navigate = useNavigate();\n//     useEffect(() => {\n//       // if there is no profile, attempt to fetch one\n//       if (!profile) getCurrentProfile();\n//       // if we finished loading and we do have a profile\n//       // then build our profileData\n//       if (!loading && profile) {\n//         const profileData = { ...initialState };\n//         for (const key in profile) {\n//           if (key in profileData) profileData[key] = profile[key];\n//         }\n//         for (const key in profile.social) {\n//           if (key in profileData) profileData[key] = profile.social[key];\n//         }\n//         // the skills may be an array from our API response\n//         if (Array.isArray(profileData.skills))\n//           profileData.skills = profileData.skills.join(', ');\n//         // set local state with the profileData\n//         setFormData(profileData);\n//       }\n//     }, [loading, getCurrentProfile, profile]);\n//     const {\n//       company,\n//       website,\n//       location,\n//       status,\n//       skills,\n//       githubusername,\n//       bio,\n//       twitter,\n//       facebook,\n//       linkedin,\n//       youtube,\n//       instagram\n//     } = formData;\n//     const onChange = (e) =>\n//       setFormData({ ...formData, [e.target.name]: e.target.value });\n//     const onSubmit = (e) => {\n//       e.preventDefault();\n//       createProfile(formData, navigate, profile ? true : false);\n//     };\n//     return (\n//       <section className=\"container\">\n//         <h1 className=\"large text-primary\">\n//           {creatingProfile ? 'Create Your Profile' : 'Edit Your Profile'}\n//         </h1>\n//         <p className=\"lead\">\n//           <i className=\"fas fa-user\" />\n//           {creatingProfile\n//             ? ` Let's get some information to make your`\n//             : ' Add some changes to your profile'}\n//         </p>\n//         <small>* = required field</small>\n//         <form className=\"form\" onSubmit={onSubmit}>\n//           <div className=\"form-group\">\n//             <select name=\"status\" value={status} onChange={onChange}>\n//               <option>* Select Professional Status</option>\n//               <option value=\"Developer\">Developer</option>\n//               <option value=\"Junior Developer\">Junior Developer</option>\n//               <option value=\"Senior Developer\">Senior Developer</option>\n//               <option value=\"Manager\">Manager</option>\n//               <option value=\"Student or Learning\">Student or Learning</option>\n//               <option value=\"Instructor\">Instructor or Teacher</option>\n//               <option value=\"Intern\">Intern</option>\n//               <option value=\"Other\">Other</option>\n//             </select>\n//             <small className=\"form-text\">\n//               Give us an idea of where you are at in your career\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Company\"\n//               name=\"company\"\n//               value={company}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">\n//               Could be your own company or one you work for\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Website\"\n//               name=\"website\"\n//               value={website}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">\n//               Could be your own or a company website\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Location\"\n//               name=\"location\"\n//               value={location}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">\n//               City & state suggested (eg. Boston, MA)\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"* Skills\"\n//               name=\"skills\"\n//               value={skills}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">\n//               Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Github Username\"\n//               name=\"githubusername\"\n//               value={githubusername}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">\n//               If you want your latest repos and a Github link, include your\n//               username\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <textarea\n//               placeholder=\"A short bio of yourself\"\n//               name=\"bio\"\n//               value={bio}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">Tell us a little about yourself</small>\n//           </div>\n//           <div className=\"my-2\">\n//             <button\n//               onClick={() => toggleSocialInputs(!displaySocialInputs)}\n//               type=\"button\"\n//               className=\"btn btn-light\"\n//             >\n//               Add Social Network Links\n//             </button>\n//             <span>Optional</span>\n//           </div>\n//           {displaySocialInputs && (\n//             <Fragment>\n//               <div className=\"form-group social-input\">\n//                 <i className=\"fab fa-twitter fa-2x\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Twitter URL\"\n//                   name=\"twitter\"\n//                   value={twitter}\n//                   onChange={onChange}\n//                 />\n//               </div>\n//               <div className=\"form-group social-input\">\n//                 <i className=\"fab fa-facebook fa-2x\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Facebook URL\"\n//                   name=\"facebook\"\n//                   value={facebook}\n//                   onChange={onChange}\n//                 />\n//               </div>\n//               <div className=\"form-group social-input\">\n//                 <i className=\"fab fa-youtube fa-2x\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"YouTube URL\"\n//                   name=\"youtube\"\n//                   value={youtube}\n//                   onChange={onChange}\n//                 />\n//               </div>\n//               <div className=\"form-group social-input\">\n//                 <i className=\"fab fa-linkedin fa-2x\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Linkedin URL\"\n//                   name=\"linkedin\"\n//                   value={linkedin}\n//                   onChange={onChange}\n//                 />\n//               </div>\n//               <div className=\"form-group social-input\">\n//                 <i className=\"fab fa-instagram fa-2x\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Instagram URL\"\n//                   name=\"instagram\"\n//                   value={instagram}\n//                   onChange={onChange}\n//                 />\n//               </div>\n//             </Fragment>\n//           )}\n//           <input type=\"submit\" className=\"btn btn-primary my-1\" />\n//           <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n//             Go Back\n//           </Link>\n//         </form>\n//       </section>\n//     );\n//   };\n//   ProfileForm.propTypes = {\n//     createProfile: PropTypes.func.isRequired,\n//     getCurrentProfile: PropTypes.func.isRequired,\n//     profile: PropTypes.object.isRequired\n//   };\n//   const mapStateToProps = (state) => ({\n//     profile: state.profile\n//   });\n//   export default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n//     ProfileForm\n//   );\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","PropTypes","connect","getTask","updateTask","initialState","title","description","TaskForm","task","_id","loading","formData","setFormData","window","location","pathname","split","pop","taskData","key","id","onBack","e","onChange","target","name","value","propTypes","func","isRequired","object","mapStateToProps","state"],"sources":["/home/rachitverma/Rachit/UDEMY/7. React Redux Express Mongodb/self-code/To do list/client/src/components/task-forms/TaskForm.js"],"sourcesContent":["import React, {  useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {  getTask,updateTask } from '../../actions/task'; \n\nconst initialState = {\n    \n    title:'',\n    description: ''\n};\n \nconst TaskForm = ({\n    task: { _id,  task, loading },\n    getTask\n  }) => {\n    const [formData, setFormData] = useState(initialState);\n  \n    useEffect(() => {\n      if(!task) getTask(window.location.pathname.split('/').pop());\n        if (!loading && task) {\n        const taskData = { ...initialState };\n        for (const key in task) {\n          if (key in taskData) taskData[key] = task[key];\n        }\n        setFormData(taskData);\n      }\n    }, [loading, getTask, task]);\n  \n    const {\n        id,\n        title,\n        description\n    } = formData;\n  \n    const onBack = (e)=>\n    {\n        setFormData(null);\n    }\n\n    const onChange = (e) =>\n      setFormData({ ...formData, [e.target.name]: e.target.value });\n  \n    // const onSubmit = (e) => {\n    //   e.preventDefault();\n    //   updateTask(window.location.pathname.split('/').pop(),formData);\n    // //   createProfile(formData, navigate, task ? true : false);\n    // };\n  \n    return (\n      <section className=\"container\">\n        <h1 className=\"large text-primary\">\n          {'Edit Your Task'}\n        </h1>\n        <p className=\"lead\">\n          <i className=\"fas fa-user\" />\n          {' Add some changes to your task'}\n        </p>\n    \n        <form className=\"form\" onSubmit={\n            updateTask(window.location.pathname.split('/').pop(),formData)\n            } >\n\n        {/* <form className=\"form\" onSubmit={onSubmit}> */}\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"title\"\n              value={title}\n              onChange={onChange}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"description\"\n              name=\"description\"\n              value={description}\n              onChange={onChange}\n            />\n          </div>\n\n          <input type=\"submit\" className=\"btn btn-primary my-1\" />\n          <Link onClick={(onBack)} className=\"btn btn-light my-1\" to=\"/dashboard\">\n            Go Back\n          </Link>\n        </form>\n      </section>\n    );\n  };\n  \n  TaskForm.propTypes = {\n    // createTask: PropTypes.func.isRequired,\n    getTask: PropTypes.func.isRequired,\n    task: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = (state) => ({\n    task: state.task\n  });\n  \n  export default connect(mapStateToProps, { getTask })(\n    TaskForm\n  );\n\n  \n\n//   const ProfileForm = ({\n//     profile: { profile, loading },\n//     createProfile,\n//     getCurrentProfile\n//   }) => {\n//     const [formData, setFormData] = useState(initialState);\n  \n//     const creatingProfile = useMatch('/create-profile');\n  \n//     const [displaySocialInputs, toggleSocialInputs] = useState(false);\n  \n//     const navigate = useNavigate();\n  \n//     useEffect(() => {\n//       // if there is no profile, attempt to fetch one\n//       if (!profile) getCurrentProfile();\n  \n//       // if we finished loading and we do have a profile\n//       // then build our profileData\n//       if (!loading && profile) {\n//         const profileData = { ...initialState };\n//         for (const key in profile) {\n//           if (key in profileData) profileData[key] = profile[key];\n//         }\n//         for (const key in profile.social) {\n//           if (key in profileData) profileData[key] = profile.social[key];\n//         }\n//         // the skills may be an array from our API response\n//         if (Array.isArray(profileData.skills))\n//           profileData.skills = profileData.skills.join(', ');\n//         // set local state with the profileData\n//         setFormData(profileData);\n//       }\n//     }, [loading, getCurrentProfile, profile]);\n  \n//     const {\n//       company,\n//       website,\n//       location,\n//       status,\n//       skills,\n//       githubusername,\n//       bio,\n//       twitter,\n//       facebook,\n//       linkedin,\n//       youtube,\n//       instagram\n//     } = formData;\n  \n//     const onChange = (e) =>\n//       setFormData({ ...formData, [e.target.name]: e.target.value });\n  \n//     const onSubmit = (e) => {\n//       e.preventDefault();\n//       createProfile(formData, navigate, profile ? true : false);\n//     };\n  \n//     return (\n//       <section className=\"container\">\n//         <h1 className=\"large text-primary\">\n//           {creatingProfile ? 'Create Your Profile' : 'Edit Your Profile'}\n//         </h1>\n//         <p className=\"lead\">\n//           <i className=\"fas fa-user\" />\n//           {creatingProfile\n//             ? ` Let's get some information to make your`\n//             : ' Add some changes to your profile'}\n//         </p>\n//         <small>* = required field</small>\n//         <form className=\"form\" onSubmit={onSubmit}>\n//           <div className=\"form-group\">\n//             <select name=\"status\" value={status} onChange={onChange}>\n//               <option>* Select Professional Status</option>\n//               <option value=\"Developer\">Developer</option>\n//               <option value=\"Junior Developer\">Junior Developer</option>\n//               <option value=\"Senior Developer\">Senior Developer</option>\n//               <option value=\"Manager\">Manager</option>\n//               <option value=\"Student or Learning\">Student or Learning</option>\n//               <option value=\"Instructor\">Instructor or Teacher</option>\n//               <option value=\"Intern\">Intern</option>\n//               <option value=\"Other\">Other</option>\n//             </select>\n//             <small className=\"form-text\">\n//               Give us an idea of where you are at in your career\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Company\"\n//               name=\"company\"\n//               value={company}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">\n//               Could be your own company or one you work for\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Website\"\n//               name=\"website\"\n//               value={website}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">\n//               Could be your own or a company website\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Location\"\n//               name=\"location\"\n//               value={location}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">\n//               City & state suggested (eg. Boston, MA)\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"* Skills\"\n//               name=\"skills\"\n//               value={skills}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">\n//               Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Github Username\"\n//               name=\"githubusername\"\n//               value={githubusername}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">\n//               If you want your latest repos and a Github link, include your\n//               username\n//             </small>\n//           </div>\n//           <div className=\"form-group\">\n//             <textarea\n//               placeholder=\"A short bio of yourself\"\n//               name=\"bio\"\n//               value={bio}\n//               onChange={onChange}\n//             />\n//             <small className=\"form-text\">Tell us a little about yourself</small>\n//           </div>\n  \n//           <div className=\"my-2\">\n//             <button\n//               onClick={() => toggleSocialInputs(!displaySocialInputs)}\n//               type=\"button\"\n//               className=\"btn btn-light\"\n//             >\n//               Add Social Network Links\n//             </button>\n//             <span>Optional</span>\n//           </div>\n  \n//           {displaySocialInputs && (\n//             <Fragment>\n//               <div className=\"form-group social-input\">\n//                 <i className=\"fab fa-twitter fa-2x\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Twitter URL\"\n//                   name=\"twitter\"\n//                   value={twitter}\n//                   onChange={onChange}\n//                 />\n//               </div>\n  \n//               <div className=\"form-group social-input\">\n//                 <i className=\"fab fa-facebook fa-2x\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Facebook URL\"\n//                   name=\"facebook\"\n//                   value={facebook}\n//                   onChange={onChange}\n//                 />\n//               </div>\n  \n//               <div className=\"form-group social-input\">\n//                 <i className=\"fab fa-youtube fa-2x\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"YouTube URL\"\n//                   name=\"youtube\"\n//                   value={youtube}\n//                   onChange={onChange}\n//                 />\n//               </div>\n  \n//               <div className=\"form-group social-input\">\n//                 <i className=\"fab fa-linkedin fa-2x\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Linkedin URL\"\n//                   name=\"linkedin\"\n//                   value={linkedin}\n//                   onChange={onChange}\n//                 />\n//               </div>\n  \n//               <div className=\"form-group social-input\">\n//                 <i className=\"fab fa-instagram fa-2x\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Instagram URL\"\n//                   name=\"instagram\"\n//                   value={instagram}\n//                   onChange={onChange}\n//                 />\n//               </div>\n//             </Fragment>\n//           )}\n  \n//           <input type=\"submit\" className=\"btn btn-primary my-1\" />\n//           <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n//             Go Back\n//           </Link>\n//         </form>\n//       </section>\n//     );\n//   };\n  \n//   ProfileForm.propTypes = {\n//     createProfile: PropTypes.func.isRequired,\n//     getCurrentProfile: PropTypes.func.isRequired,\n//     profile: PropTypes.object.isRequired\n//   };\n  \n//   const mapStateToProps = (state) => ({\n//     profile: state.profile\n//   });\n  \n//   export default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n//     ProfileForm\n//   );\n  "],"mappings":"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},"metadata":{},"sourceType":"module"}