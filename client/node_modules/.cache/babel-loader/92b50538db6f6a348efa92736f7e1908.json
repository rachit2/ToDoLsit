{"ast":null,"code":"import api from '../utils/api';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_REPOS, NO_REPOS } from './types';\n/*\n  NOTE: we don't need a config object for axios as the\n default headers in axios are already Content-Type: application/json\n also axios stringifies and parses JSON for you, so no need for \n JSON.stringify or JSON.parse\n*/\n// Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await api.get('/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await api.get('/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await api.get(`/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get Github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await api.get(`/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: NO_REPOS\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = function (formData, navigate) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const res = await api.post('/profile', formData);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n      if (!edit) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n}; // Add Experience\n\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    const res = await api.put('/profile/experience', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, navigate) => async dispatch => {\n  try {\n    const res = await api.put('/profile/education', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await api.delete(`/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await api.delete(`/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account & profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await api.delete('/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanently deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["api","setAlert","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","GET_REPOS","NO_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","navigate","edit","post","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"sources":["/home/rachitverma/Rachit/UDEMY/7. React Redux Express Mongodb/self-code/To do list/client/src/actions/profile.js"],"sourcesContent":["import api from '../utils/api';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n  GET_REPOS,\n  NO_REPOS\n} from './types';\n\n/*\n  NOTE: we don't need a config object for axios as the\n default headers in axios are already Content-Type: application/json\n also axios stringifies and parses JSON for you, so no need for \n JSON.stringify or JSON.parse\n*/\n\n// Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await api.get('/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await api.get('/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get profile by ID\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await api.get(`/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get Github repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await api.get(`/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: NO_REPOS\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile =\n  (formData, navigate, edit = false) =>\n  async (dispatch) => {\n    try {\n      const res = await api.post('/profile', formData);\n\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n\n      dispatch(\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n      );\n\n      if (!edit) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n// Add Experience\nexport const addExperience = (formData, navigate) => async (dispatch) => {\n  try {\n    const res = await api.put('/profile/experience', formData);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add Education\nexport const addEducation = (formData, navigate) => async (dispatch) => {\n  try {\n    const res = await api.put('/profile/education', formData);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await api.delete(`/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await api.delete(`/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await api.delete('/profile');\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(setAlert('Your account has been permanently deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}