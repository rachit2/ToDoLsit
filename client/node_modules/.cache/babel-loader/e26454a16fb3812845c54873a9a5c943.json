{"ast":null,"code":"var _jsxFileName = \"/home/rachitverma/Rachit/UDEMY/7. React Redux Express Mongodb/self-code/To do list/client/src/components/dashboard/Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // import { useGoogleLogout } from 'react-google-login';\n// import { useNavigate } from \"react-router-dom\";\n// import { toast} from \"react-toastify\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst clientId = '831999342823-t1e1bla0t8qtn36ko1ebmn5389hg062k.apps.googleusercontent.com';\n\nconst Dashboard = _ref => {\n  let {\n    auth: {\n      user\n    }\n  } = _ref;\n  // let history = useNavigate();\n  // const onLogoutSuccess = () => {\n  //   // toast.success('Logged out Successfully', {position: \"top-center\",autoClose: 5000,hideProgressBar: false, closeOnClick: true,pauseOnHover: true,draggable: true,});\n  //    console.log(\"Success\")\n  //   localStorage.removeItem('loginID');\n  //   history('/');\n  // };\n  // const onFailure = (res) => {\n  //   console.log('Login failed: res:', res);\n  // };  \n  // const { signOut } = useGoogleLogout({\n  //   clientId,\n  //   onLogoutSuccess,\n  //   onFailure,\n  // });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \" Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add some tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/tasks\",\n        className: \"btn btn-primary my-1\",\n        children: \"Goto Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Dashboard \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" Insert Id : \", JSON.parse(localStorage.getItem('loginID')), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signOut,\n        className: \"gr__log__button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dashboard;\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","Link","useNavigate","PropTypes","connect","clientId","Dashboard","auth","user","name","JSON","parse","localStorage","getItem","signOut","propTypes","object","isRequired","mapStateToProps","state"],"sources":["/home/rachitverma/Rachit/UDEMY/7. React Redux Express Mongodb/self-code/To do list/client/src/components/dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { useGoogleLogout } from 'react-google-login';\n// import { useNavigate } from \"react-router-dom\";\n// import { toast} from \"react-toastify\";\n\nconst clientId = '831999342823-t1e1bla0t8qtn36ko1ebmn5389hg062k.apps.googleusercontent.com';\n\n\nconst Dashboard = ({\n  auth: { user }\n}) => {\n\n  // let history = useNavigate();\n\n\n  // const onLogoutSuccess = () => {\n  //   // toast.success('Logged out Successfully', {position: \"top-center\",autoClose: 5000,hideProgressBar: false, closeOnClick: true,pauseOnHover: true,draggable: true,});\n  //    console.log(\"Success\")\n  //   localStorage.removeItem('loginID');\n  //   history('/');\n  // };\n  // const onFailure = (res) => {\n  //   console.log('Login failed: res:', res);\n  // };  \n  // const { signOut } = useGoogleLogout({\n  //   clientId,\n  //   onLogoutSuccess,\n  //   onFailure,\n  // });\n\n\n\n\n\n\n  return (\n    <section className=\"container\">\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\" /> Welcome {user && user.name}\n      </p>\n      { (\n        <>\n          <p>Add some tasks</p>\n          <Link to=\"/tasks\" className=\"btn btn-primary my-1\">\n            Goto Task\n          </Link>\n        </>\n      )}\n      <div>\n        <h1> Dashboard </h1>\n        <h4> Insert Id : {JSON.parse(localStorage.getItem('loginID'))} </h4>\n        <button onClick={signOut} className=\"gr__log__button\">Logout</button>\n      </div>\n\n    </section>\n  );\n};\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(\n  Dashboard\n);\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,GAAG,0EAAjB;;AAGA,MAAMC,SAAS,GAAG,QAEZ;EAAA,IAFa;IACjBC,IAAI,EAAE;MAAEC;IAAF;EADW,CAEb;EAEJ;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAOA,oBACE;IAAS,SAAS,EAAC,WAAnB;IAAA,wBACE;MAAI,SAAS,EAAC,oBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAG,SAAS,EAAC,MAAb;MAAA,wBACE;QAAG,SAAS,EAAC;MAAb;QAAA;QAAA;QAAA;MAAA,QADF,eACyCA,IAAI,IAAIA,IAAI,CAACC,IADtD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAMI;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD;QAAM,EAAE,EAAC,QAAT;QAAkB,SAAS,EAAC,sBAA5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBANJ,eAaE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,4BAAkBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAlB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEC,OAAjB;QAA0B,SAAS,EAAC,iBAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAjDD;;KAAMR,S;AAmDNA,SAAS,CAACS,SAAV,GAAsB;EACpBR,IAAI,EAAEJ,SAAS,CAACa,MAAV,CAAiBC;AADH,CAAtB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;EAClCZ,IAAI,EAAEY,KAAK,CAACZ;AADsB,CAAZ,CAAxB;;AAIA,eAAeH,OAAO,CAACc,eAAD,CAAP,CACbZ,SADa,CAAf"},"metadata":{},"sourceType":"module"}